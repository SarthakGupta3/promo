{"version":3,"sources":["Assets/logo.png","Assets/watch.jpg","Assets/footer.jpg","Components/Landing/landing.js","Components/nav/nav.js","Components/Keyfeatures/features.js","Components/Footer/footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Landing","className","src","logo","alt","id","Watch","React","Component","Nav","Features","state","count","flow","assets","selected","updateImage","setState","this","interval","setInterval","clearInterval","autoplay","loop","style","width","height","Footer","paddingTop","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oGAAAA,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,+ICA3CD,EAAOC,QAAU,IAA0B,oC,4KC2B5BC,E,uKAnBP,OACI,yBAAKC,UAAU,qBACX,yBAAKA,UAAU,kBACX,yBAAKC,IAAKC,IAAMC,IAAI,GAAGC,GAAG,SAC1B,yBAAKJ,UAAU,kBACX,uBAAGA,UAAU,eAAb,iBACA,uBAAGA,UAAU,eAAb,aACA,uBAAGA,UAAU,eAAb,eAEJ,4BAAQI,GAAG,YAAX,aAEJ,yBAAKJ,UAAU,mBACX,yBAAKC,IAAKI,IAAOF,IAAI,GAAGC,GAAG,gB,GAdzBE,IAAMC,WCSbC,G,6KATP,OACI,wBAAIR,UAAU,UACV,wBAAIA,UAAU,WAAWI,GAAG,iBAA5B,WACA,wBAAIJ,UAAU,YAAd,iB,GALEM,IAAMC,YC6CTE,G,kNA7CXC,MAAM,CACFC,MAAM,EACNC,KAAK,CAAC,cAAe,WAAY,YACjCC,OAAO,CAAC,iEAAkE,iEAAkE,kEAC5IC,SAAS,kE,EAEbC,YAAc,WACZ,IAAIJ,EAAQ,EAAKD,MAAMC,MAAQ,EAC/BA,GAAO,EACT,EAAKK,SAAS,CAACL,MAAMA,K,kEAED,IAAD,OACfM,KAAKC,SAAW,kBAAMC,aAAY,kBAAM,EAAKJ,gBAAe,MAC5DE,KAAKC,a,2CAIFD,KAAKC,UACJE,cAAcH,KAAKC,Y,+BAGvB,OACI,6BACI,4CACA,yBAAKd,GAAG,oBACJ,6BACI,mCAAgBiB,UAAQ,EAACC,MAAI,EAAClB,GAAG,cAAcH,IAAI,iEAAiEsB,MAAO,CAAEC,MAAM,QAASC,OAAO,WACnJ,uBAAIzB,UAAU,gBAAd,2BAEJ,6BACI,mCAAgBqB,UAAQ,EAACC,MAAI,EAAClB,GAAG,cAAcH,IAAI,iEAAiEsB,MAAO,CAAEC,MAAM,QAASC,OAAO,WACnJ,uBAAIzB,UAAU,gBAAd,8BAGL,6BACC,mCAAgBqB,UAAQ,EAACC,MAAI,EAAClB,GAAG,cAAcH,IAAI,iEAAiEsB,MAAO,CAAEC,MAAM,QAASC,OAAO,WACnJ,uBAAIzB,UAAU,gBAAd,gC,GArCGM,IAAMC,YCkBdmB,G,mLAdP,OACA,yBAAKtB,GAAG,UACJ,yBAAKmB,MAAO,CAACI,WAAW,UACpB,uBAAG3B,UAAU,eAAb,uBACA,uBAAGA,UAAU,eAAb,OACA,uBAAGA,UAAU,eAAb,uB,GAPKM,IAAMC,YCcZqB,MAXf,WACE,OACE,yBAAK5B,UAAU,OACX,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCFY6B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.f2d60d51.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.6db95fd3.png\";","module.exports = __webpack_public_path__ + \"static/media/watch.5644d277.jpg\";","module.exports = __webpack_public_path__ + \"static/media/footer.31cd37ee.jpg\";","import React from 'react'\r\nimport './landing.css'\r\n\r\nimport logo from '../../Assets/logo.png';\r\nimport Watch from '../../Assets/watch.jpg';\r\n\r\nclass Landing extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className=\"landing-container\">\r\n                <div className=\"left-container\">\r\n                    <img src={logo} alt=\"\" id=\"logo\"></img>\r\n                    <div className='text-container'>   \r\n                        <p className=\"font-header\">An AI enabled</p>\r\n                        <p className=\"font-header\">IOT based</p>\r\n                        <p className=\"font-header\">wristband.</p>\r\n                    </div>\r\n                    <button id=\"download\">Download</button>\r\n                </div>\r\n                <div className=\"right-container\">\r\n                    <img src={Watch} alt=\"\" id=\"cover\"></img>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}   \r\n\r\nexport default Landing;","import React from 'react';\r\n\r\nimport './nav.css';\r\n\r\nclass Nav extends React.Component{\r\n    render(){\r\n        return (\r\n            <ul className=\"navbar\">   \r\n                <li className=\"nav-item\" id=\"nav-item-head\">Contact</li>\r\n                <li className=\"nav-item\">Download</li>\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\nimport './features.css'\r\n\r\nclass Features extends React.Component{\r\n    state={\r\n        count:0,\r\n        flow:['Temperature', 'Geofence', 'Distance'],\r\n        assets:['https://assets7.lottiefiles.com/private_files/lf30_tJTMQ4.json', 'https://assets8.lottiefiles.com/private_files/lf30_D4yZiV.json', 'https://assets9.lottiefiles.com/private_files/lf30_9FzSEE.json'],\r\n        selected:'https://assets7.lottiefiles.com/private_files/lf30_tJTMQ4.json'\r\n    }\r\n    updateImage = () => {\r\n      let count = this.state.count + 1;\r\n      count%=3;\r\n    this.setState({count:count})\r\n    }\r\n    componentDidMount(){\r\n        this.interval = () => setInterval(() => this.updateImage(), 7000);\r\n        this.interval();\r\n    }\r\n\r\n    componentWillMount(){\r\n        if(this.interval)\r\n            clearInterval(this.interval)\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1>Key Features</h1>\r\n                <div id=\"player-container\">\r\n                    <div>\r\n                        <lottie-player  autoplay loop id=\"firstLottie\" src='https://assets1.lottiefiles.com/private_files/lf30_wBcF24.json' style={{ width:'300px', height:'300px'}}></lottie-player>\r\n                        <p  className=\"feature-text\">Temperature Monitoring</p>\r\n                    </div>\r\n                    <div>\r\n                        <lottie-player  autoplay loop id=\"firstLottie\" src='https://assets8.lottiefiles.com/private_files/lf30_D4yZiV.json' style={{ width:'300px', height:'300px'}}></lottie-player>\r\n                        <p  className=\"feature-text\">Geo Fencing breach Alerts</p>\r\n                    </div>\r\n                   \r\n                   <div>\r\n                    <lottie-player  autoplay loop id=\"firstLottie\" src='https://assets9.lottiefiles.com/private_files/lf30_9FzSEE.json' style={{ width:'300px', height:'300px'}}></lottie-player>\r\n                    <p  className=\"feature-text\">Social Distance Alert</p>\r\n                    \r\n                   </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Features;","import React from 'react';\r\n\r\nimport footer from '../../Assets/footer.jpg'\r\nimport './footer.css'\r\n\r\nclass Footer extends React.Component{\r\n    render(){\r\n        return( \r\n        <div id=\"footer\">\r\n            <div style={{paddingTop:'10rem'}}>\r\n                <p className=\"footer-text\">Contact Information</p>\r\n                <p className=\"footer-text\">and</p>\r\n                <p className=\"footer-text\">Other Details</p>\r\n            </div>\r\n          \r\n        </div>\r\n        )\r\n       \r\n    }\r\n}\r\n\r\nexport default Footer;          ","import React from 'react';\nimport './App.css';\n\nimport Landing from './Components/Landing/landing'\nimport Nav from './Components/nav/nav';\nimport Features from './Components/Keyfeatures/features'\nimport Footer from './Components/Footer/footer'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Nav />\n        <Landing/>\n        <Features/>\n        <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}